

<div >
  <div class="main_question">
    <h1 class="title"><%= format_text_for_display(@question.title) -%></h1>
<div class="question_body"><%= format_text_for_display(@question.body) %></div>

  <% if @question.images.size > 0 %>

    <div class="images_wrapper clearfix">
    <% @question.images.each do |image| %>
      <% if image.persisted? %>
        <% if File.exists?(Rails.root.join("public#{image.url(:original,{escape: false, timestamp: false})}")) %>
        <div class="question_image_wrapper">
          <a data-toggle="modal" href="#myModal<%= image.id %>"><%= image_tag image.dynamic_attachment_url("300x300#"), :class => "size180w" %></a>
        </div>


        <div class="modal fade" id="myModal<%= image.id %>" tabindex="-1" role="dialog" aria-labelledby="myModal<%= image.id %>-label" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <p><%= link_to "View full size in a new window", image.url(), :target => "_blank" %></p>
              </div>
              <div class="modal-body">
                <%= image_tag image.url() %>
              </div>
            </div><!-- /.modal-content -->
          </div><!-- /.modal-dialog -->
        </div><!-- /.modal -->

        <% else %>
         <%= image_tag("missing_image.png", :size => "80x80", :class => 'missing_image size80x80') %>
        <% end %>
      <% end %>
    <% end %>
    <br class="clearing" />
  </div>


  <% end %>

  <div id="question_location">
    <%= render :partial => 'question_location' %>
  </div>




    <div id="tag_interface">
    <div id="tag_picker_wrapper">
      <div class="ui-widget">
        <label for="tag_picker">Add Tags <small>(Tags are viewable on public questions)</small></label>
    	  <input id="tag_picker" class="form-control" placeholder="Type a word and select it..." />
      </div>
    </div>

    <div id="tags">

    <% if @question.tags.size > 0 %>
      <% @question.tags.each do |tag| %>
        <p class="tagwrapper" id="tag_<%= tag.id %>"><span class="tag tag-topic"><%= link_to tag.name, questions_by_tag_expert_groups_path(:group_id => @question.assigned_group.id, :tag_id => tag.id) %></span> <span class="btn removetag">x</span>
          <%  if tag.name == "front page" %>

            <!-- Button trigger modal -->
            <span class="cursor label label-inverse" data-toggle="modal" data-target="#frontpage">What's this?</span>

            <!-- Modal -->
            <div class="modal fade" id="frontpage" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title" id="myModalLabel">What is the "front page" tag?</h4>
                  </div>
                  <div class="modal-body">
                    <p>The "front page" tag will be used to feature questions on the front page of www.extension.org. A curation team chooses which questions should be featured and they add the "front page" tag accordingly. </p>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                  </div>
                </div>
              </div>
            </div>


          <% end %>
          </p>
      <% end %>
    <% else %>

    <% end %>

    </div>
    </div>



</div>
</div>




<% if @question_responses.size > 0 %>

  <div class="title_block">
    <h2>Answers &amp; Replies</h2>
    <p>Answers from experts and replies from the submitter</p>
  </div>

  <% @question_responses.each do |response| %>
    <div class="response_block">
      <div class="response"><%= format_text_for_display(response.body) %></div>
      <div class="signature"><%= format_text_for_display(response.signature) %></div>




      <% if response.images.size > 0 %>

        <div class="images_wrapper clearfix">
        <% response.images.each do |image| %>
          <% if image.persisted? %>
            <% if File.exists?(Rails.root.join("public#{image.url(:original,{escape: false, timestamp: false})}")) %>
            <div class="question_image_wrapper">
              <a data-toggle="modal" href="#myModal<%= image.id %>"><%= image_tag image.dynamic_attachment_url("300x300#"), :class => "size180w" %></a>
            </div>

            <div class="modal fade" id="myModal<%= image.id %>" tabindex="-1" role="dialog" aria-labelledby="myModal<%= image.id %>-label" aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <p><%= link_to "View full size in a new window", image.url(), :target => "_blank" %></p>
                  </div>
                  <div class="modal-body">
                    <%= image_tag image.url() %>
                  </div>
                </div><!-- /.modal-content -->
              </div><!-- /.modal-dialog -->
            </div><!-- /.modal -->

            <% else %>
             <%= image_tag("missing_image.png", :size => "80x80", :class => 'missing_image size80x80') %>
            <% end %>
          <% end %>
        <% end %>
        <br class="clearing" />
      </div>


      <% end %>

      <div class="author">
        <% if response.resolver_id %>
          <%= link_to expert_user_path(response.resolver_id) do %>
            <%= link_public_user_avatar(response.resolver, :thumb) %> <%= link_to response.resolver.name, expert_user_path(response.resolver_id) %>
          <% end %>
        <% else %>
          <p><%= link_to @question.submitter.public_name, expert_user_submitted_path(@question.submitter) %></p>
        <% end %>
        <p><small>Posted <%= time_ago_in_words(response.created_at) %> ago</small></p>
        <p><%= link_to 'edit', edit_response_expert_question_path(:id => @question.id, :response_id => response.id) %> | <%= link_to 'revision history', response_history_expert_question_path(:id => @question.id, :response_id => response.id) %></p>
      </div>
    </div>
  <% end %>
<% end %>




<script class="code" type="text/javascript">

		function add_tag(tag) {
		  $.ajax({
        type: "POST",
        url: "<%= expert_questions_add_tag_path(:id => @question.id) %>",
        cache: false,
        data: {tag: tag}
      })
      .done(function() {
				$("#tag_picker").autocomplete("close");
				$("#tag_picker").val('');
				return false;
      })
      .fail(function(jqXHR, textStatus, errorThrown) {
        alert("Request failed: " + errorThrown);
        $("#tag_picker").autocomplete("close");
  			$("#tag_picker").val('');
  			return false;
      })
		}

    // create an instance of autocomplete plus a hack for using the 'enter' key instead of direct selection
    $(document).ready(function(){
		$("#tag_picker").autocomplete({
			source: "/ajax/tags",
			minLength: 2,
			select: function(e, ui) {
			  add_tag(ui.item.name);
			}
		}).keypress(function(e) {
      if (e.keyCode === 13) {
        if ($.trim(this.value) != "") {
          add_tag(this.value);
        } else {
          $("#tag_picker").val('');
  				return false;
        }
      }
    }).data( "autocomplete" )._renderItem = function( ul, item ) {
      return $( "<li></li>" )
      .data( "item.autocomplete", item )
      .append( "<a>"+ item.label + " <strong>(" + item.tag_count + ")</strong></a>" )
      .appendTo( ul );
    };
    });
    // remove tags
     $("#tags").on("click", ".removetag", function(){
       var tag = $(this).closest(".tagwrapper");
       $.ajax({
         type: "POST",
           url: "<%= expert_questions_remove_tag_path(:id => @question.id) %>",
           cache: false,
           data: {tag_id: tag.attr("id").replace('tag_', '')}
       })
       .done(function() {
         tag.fadeOut(500);
       })
     });

</script>
