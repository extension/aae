<div id="main" class="span8">
  
  <p>AaE #<%= @question.id %></p>
  
  <%= render :partial => 'partials/question_main' %>
  
  <div class="ui-widget">
  	<label for="tag_picker">Tags: </label>
  	<input id="tag_picker" /> <small>(All tags are public if the question is public)</small>
  </div>
  
  <div id="tag_list" style="margin-top:1em; font-size:1.2em;">
  <% if @question.tags.length > 0 %>
    <% @question.tags.each do |tag| %>
      <p id="tag_<%= tag.id %>"><span class="label"><%= link_to tag.name %></span> <span class="removetag">[x]</span></p>
    <% end %>
  <% else %>
    <p id="needs_tags"><span class="label label-inverse">needs tags</span></p>
  <% end %>

  <% @question.images.each do |image| %>
    <%= image_tag image.url(:thumb) %>
  <% end %>

  <p>Location: <%= "#{@question.county.name} County, " if @question.county.present? && @question.location.present? %> <%= @question.location.present? ? @question.location.abbreviation : 'not specified' %></p>

  </div>

  <script class="code" type="text/javascript">

  		function add_tag(tag) {
  		  $.ajax({
          type: "POST",
          url: "<%= expert_questions_add_tag_path(:id => @question.id) %>",
          cache: false,
          data: {tag: tag}
        })
        .done(function() {
  				$("#tag_picker").autocomplete("close");
  				$("#tag_picker").val('');
  				return false;
        })  
        .fail(function() {
          // TODO: need to handle the fail instance for when user tries to adding existing tag. should not be a fail.
          alert("error");
          $("#tag_picker").autocomplete("close");
    			$("#tag_picker").val('');
    			return false;
        })
  		}

      // create an instance of autocomplete plus a hack for using the 'enter' key instead of direct selection
  		$("#tag_picker").autocomplete({
  			source: "/ajax/tags",
  			minLength: 2,
  			select: function(e, ui) {
  			  add_tag(ui.item.name);
  			}
  		}).keypress(function(e) {
        if (e.keyCode === 13) {
          add_tag(this.value);
        }
      });

      // remove tags
       $("#tag_list").on("click", ".removetag", function(){
         var tag = $(this).closest("p");
         $.ajax({
           type: "POST",
             url: "<%= expert_questions_remove_tag_path(:id => @question.id) %>",
             cache: false,
             data: {tag_id: tag.attr("id").replace('tag_', '')}
         })
         .done(function() {
           tag.fadeOut(500);
         })
       });

  </script>
  
  
  
	<%= render :partial => 'partials/history' %>
  
</div>


<div id="secondary" class="span4">
  <aside>
    <p><%= link_to "View Public page", question_path(@question.id), :class => "label btn-warning" %></p>
    <% if @question.is_private %>
      <p><i class="icon-lock"></i> This question is private</p>
    <% else %>
      <p><i class="icon-globe"></i> This question is public</p>
    <% end %>
    
    <p><span class="notifylink"><i class="icon-envelope"></i> <%= link_to "Notify me when this question has activity" %></span></p>
  </aside>
  
  <% if @question_responses.length < 1 %>
    <aside>
      <h3>Actions</h3>
      <p><%= link_to "Reassign" %></p>
      <p><%= link_to "Reject (inappropriate or duplicate)" %></p>
	</aside>
  
	<aside>
      <h3>Assigned to</h3>
      <%= get_avatar(@question.assignee, :thumb) %>
      <%= link_to expert_user_path(@question.assignee_id) do %>
      <div class="expert">
        <p><%= @question.assignee.name %> Short Description</p>
      </div>
      <% end %>
	
	<% if @question.assigned_group %>
      <p><%= get_group_avatar(@question.assigned_group, :thumb) %> <%= link_to @question.assigned_group.name, expert_group_path(@question.assigned_group.id) %></p>
		<p>This question is associated with the above group. To change, reassign the question to a new group. <small>(note: this is an explanation of how the code currently works)</small></p>
	<% else %>
		<p><strong>This question is groupless :(</strong> To change, reassign the question to a new group. <small>(note: this is an explanation of how the code currently works)</small></p>
	<% end %>
    </aside>
  <% end %>
  
  <aside>
    <%= render :partial => 'partials/related' %>
  </aside>
  
</div>