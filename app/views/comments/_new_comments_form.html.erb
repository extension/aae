<div class="cc-comment-form">

  <% if defined?(@errors) && @errors.present? %>
    <div class="alert alert-error">
      <p><%= @errors %></p>
    </div>
  <% end %>
  
  <% if current_user.has_exid? %>
    <p><%= link_public_user_avatar(current_user, :thumb) %> <%= link_to current_user.public_name, user_path(current_user.id) %></p>
  <% else %>
    <p><strong><%= current_user.public_name %></strong></p>
  <% end %>

  <%= form_for @comment, html: {class: "no-top-margin"}, remote: true do |f| %>
    
    <%= f.text_area :content, cols: 20, rows: 5, class: "wysihtml5" %>
    
    <%= f.hidden_field :question_id, value: @question.id %>
    <!-- parent_comment being present means that we called this template from the parent comment's view page 
         and we're passing the parent_comment id along to the request to edit that comment so we can then 
         render the correct thing after the comment edit is executed, because the originating page is a comment and it's 
         children and not the whole list of comments -->
    <% if @parent_comment.present? %>
      <%= f.hidden_field :parent_id, value: @parent_comment.id %>
    <% end %>
    
    <% if @comment.ancestry? %>
      <%= f.hidden_field :ancestry, value: @comment.ancestry %>
    <% end %>
    
    <%= f.submit "Post comment", disable_with: 'Saving...', id: 'comment-submit', class: 'btn btn-primary' %>
    
    <% if @parent_comment.present? %>
      <%= link_to 'Cancel', cancel_reply_comments_path(comment_id: @parent_comment.id), class: 'cancel-reply-to-comment btn', remote: true, :data => { :comment => @parent_comment.id } %>
    <% end %>

  <% end %>

</div>